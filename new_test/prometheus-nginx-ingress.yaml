apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-nginx-ingress
data:
  prometheus-nginx-ingress: |
    {
      "filterKey": "${namespace_key},${pod_key}",
      "data": {
        "percent_diff_threshold": "hard",
        "isNormalize": false,
        "groups": [
          {
            "metrics": [
              {
                "metricType": "ADVANCED",
                "metricWeight": 1,
                "nanStrategy": "ReplaceWithZero",
                "accountName": "isd312-saas-prom",
                "riskDirection": "Higher",
                "customThresholdHigher": 70,
                "name": "avg(rate(nginx_ingress_controller_bytes_sent_count{namespace=\"${namespace_key}\", kubernetes_pod_name=~\".*${pod_key}.*\" }[5m]))",
                "criticality": "Normal",
                "customThresholdLower": "10",
                "watchlist": false
              }
            ],
            "group": "Number Of Bytes Sent To Client"
          },
          {
            "metrics": [
              {
                "metricType": "ADVANCED",
                "metricWeight": 1,
                "nanStrategy": "ReplaceWithZero",
                "accountName": "isd312-saas-prom",
                "riskDirection": "Higher",
                "customThresholdHigher": 70,
                "name": "avg(rate(nginx_ingress_controller_config_hash{namespace=\"${namespace_key}\", kubernetes_pod_name=~\".*${pod_key}.*\" }[5m]))",
                "criticality": "Normal",
                "customThresholdLower": "10",
                "watchlist": false
              }
            ],
            "group": "Configuration Hashes Running"
          },
          {
            "metrics": [
              {
                "metricType": "ADVANCED",
                "metricWeight": 1,
                "nanStrategy": "ReplaceWithZero",
                "accountName": "isd312-saas-prom",
                "riskDirection": "Higher",
                "customThresholdHigher": 90,
                "name": "avg(rate(nginx_ingress_controller_config_last_reload_successful{namespace=\"${namespace_key}\", kubernetes_pod_name=~\".*${pod_key}.*\" }[5m]))",
                "criticality": "Normal",
                "customThresholdLower": "10",
                "watchlist": false
              }
            ],
            "group": "Last Configuration Reload Attempt Successful Or Not"
          },
          {
            "metrics": [
              {
                "metricType": "ADVANCED",
                "metricWeight": 1,
                "nanStrategy": "ReplaceWithZero",
                "accountName": "isd312-saas-prom",
                "riskDirection": "Lower",
                "customThresholdHigher": 50,
                "name": "avg(rate(nginx_ingress_controller_ingress_upstream_latency_seconds{namespace=\"${namespace_key}\",kubernetes_pod_name=~\".*${pod_key}.*\"}[5m]))",
                "criticality": "Normal",
                "customThresholdLower": 90,
                "watchlist": false
              }
            ],
            "group": "Upstream Service Latency Per Ingress"
          },
          {
            "metrics": [
              {
                "metricType": "ADVANCED",
                "metricWeight": 1,
                "nanStrategy": "ReplaceWithZero",
                "accountName": "isd312-saas-prom",
                "riskDirection": "Higher",
                "customThresholdHigher": 70,
                "name": "avg(rate(nginx_ingress_controller_nginx_process_connections{namespace=\"${namespace_key}\",kubernetes_pod_name=~\".*${pod_key}.*\"}[5m]))",
                "criticality": "Normal",
                "customThresholdLower": "10",
                "watchlist": false
              }
            ],
            "group": "Current Number Of Client Connections With State {reading, writing, waiting}"
          },
          {
            "metrics": [
              {
                "metricType": "ADVANCED",
                "metricWeight": 1,
                "nanStrategy": "ReplaceWithZero",
                "accountName": "isd312-saas-prom",
                "riskDirection": "Higher",
                "customThresholdHigher": 70,
                "name": "avg(rate(nginx_ingress_controller_nginx_process_connections_total{namespace=\"${namespace_key}\",kubernetes_pod_name=~\".*${pod_key}.*\"}[5m]))",
                "criticality": "Normal",
                "customThresholdLower": "10",
                "watchlist": false
              }
            ],
            "group": "Total Number of Connections With State {active, accepted, handled}"
          },
          {
            "metrics": [
              {
                "metricType": "ADVANCED",
                "metricWeight": 1,
                "nanStrategy": "ReplaceWithZero",
                "accountName": "isd312-saas-prom",
                "riskDirection": "Higher",
                "customThresholdHigher": 70,
                "name": "avg(rate(nginx_ingress_controller_nginx_process_cpu_seconds_total{namespace=\"${namespace_key}\",kubernetes_pod_name=~\".*${pod_key}.*\"}[5m]))",
                "criticality": "Normal",
                "customThresholdLower": "10",
                "watchlist": false
              }
            ],
            "group": "CPU Usage In Seconds"
          },
          {
            "metrics": [
              {
                "metricType": "ADVANCED",
                "metricWeight": 1,
                "nanStrategy": "ReplaceWithZero",
                "accountName": "isd312-saas-prom",
                "riskDirection": "Higher",
                "customThresholdHigher": 70,
                "name": "avg(rate(nginx_ingress_controller_nginx_process_num_procs{namespace=\"${namespace_key}\",kubernetes_pod_name=~\".*${pod_key}.*\"}[5m]))",
                "criticality": "Normal",
                "customThresholdLower": "10",
                "watchlist": false
              }
            ],
            "group": "Number Of Processes"
          },
          {
            "metrics": [
              {
                "metricType": "ADVANCED",
                "metricWeight": 1,
                "nanStrategy": "ReplaceWithZero",
                "accountName": "isd312-saas-prom",
                "riskDirection": "Higher",
                "customThresholdHigher": 70,
                "name": "avg(rate(nginx_ingress_controller_nginx_process_read_bytes_total{namespace=\"${namespace_key}\",kubernetes_pod_name=~\".*${pod_key}.*\"}[5m]))",
                "criticality": "Normal",
                "customThresholdLower": "10",
                "watchlist": false
              }
            ],
            "group": "Number of Bytes Read"
          },
          {
            "metrics": [
              {
                "metricType": "ADVANCED",
                "metricWeight": 1,
                "nanStrategy": "ReplaceWithZero",
                "accountName": "isd312-saas-prom",
                "riskDirection": "Higher",
                "customThresholdHigher": 70,
                "name": "avg(rate(nginx_ingress_controller_nginx_process_requests_total{namespace=\"${namespace_key}\",kubernetes_pod_name=~\".*${pod_key}.*\"}[5m]))",
                "criticality": "Normal",
                "customThresholdLower": "10",
                "watchlist": false
              }
            ],
            "group": "Number of Client Requests"
          },
          {
            "metrics": [
              {
                "metricType": "ADVANCED",
                "metricWeight": 1,
                "nanStrategy": "ReplaceWithZero",
                "accountName": "isd312-saas-prom",
                "riskDirection": "Higher",
                "customThresholdHigher": 70,
                "name": "avg(rate(nginx_ingress_controller_nginx_process_resident_memory_bytes{namespace=\"${namespace_key}\",kubernetes_pod_name=~\".*${pod_key}.*\"}[5m]))",
                "criticality": "Normal",
                "customThresholdLower": "10",
                "watchlist": false
              }
            ],
            "group": "Number Of Bytes Of Memory In Use"
          },
          {
            "metrics": [
              {
                "metricType": "ADVANCED",
                "metricWeight": 1,
                "nanStrategy": "ReplaceWithZero",
                "accountName": "isd312-saas-prom",
                "riskDirection": "Higher",
                "customThresholdHigher": 70,
                "name": "avg(rate(nginx_ingress_controller_nginx_process_write_bytes_total{namespace=\"${namespace_key}\",kubernetes_pod_name=~\".*${pod_key}.*\"}[5m]))",
                "criticality": "Normal",
                "customThresholdLower": "10",
                "watchlist": false
              }
            ],
            "group": "Number Of Bytes Written"
          },
          {
            "metrics": [
              {
                "metricType": "ADVANCED",
                "metricWeight": 1,
                "nanStrategy": "ReplaceWithZero",
                "accountName": "isd312-saas-prom",
                "riskDirection": "Higher",
                "customThresholdHigher": 70,
                "name": "avg(rate(nginx_ingress_controller_requests{namespace=\"${namespace_key}\",kubernetes_pod_name=~\".*${pod_key}.*\"}[5m]))",
                "criticality": "Normal",
                "customThresholdLower": "10",
                "watchlist": false
              }
            ],
            "group": "Number Of Client Requests"
          },
          {
            "metrics": [
              {
                "metricType": "ADVANCED",
                "metricWeight": 1,
                "nanStrategy": "ReplaceWithZero",
                "accountName": "isd312-saas-prom",
                "riskDirection": "Higher",
                "customThresholdHigher": 70,
                "name": "avg(rate(nginx_ingress_controller_nginx_process_virtual_memory_bytes{namespace=\"${namespace_key}\",kubernetes_pod_name=~\".*${pod_key}.*\"}[5m]))",
                "criticality": "Normal",
                "customThresholdLower": "10",
                "watchlist": false
              }
            ],
            "group": "Number Of Bytes Of Virtual Memory In Use"
          }
        ]
      },
      "templateName": "prometheus-nginx-ingress",
      "advancedProvider": "PROMETHEUS"
    }
